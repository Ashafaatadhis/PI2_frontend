// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// MODEL DEFAULT DARI NEXTAUTH
model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  accounts      Account[]
  sessions      Session[]
 

  dailyActivities DailyActivity[]
  prediksiStres   PrediksiStres[]
//   chatLogs        ChatLog[]
//   reminders       Reminder[]
  streaks         Streak[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
 
// FITUR TAMBAHAN PROYEK KAMU

model DailyActivity {
  id              Int      @id @default(autoincrement())
  userId          String
  tanggal         DateTime
  jamTidur        Float
  screenTime      Float
  waktuOlahraga   Float
  waktuBelajar    Float
  jumlahTugas     Int

  user            User     @relation(fields: [userId], references: [id])
  prediksiStres   PrediksiStres?

  @@unique([userId, tanggal])
}

model PrediksiStres {
  id              Int      @id @default(autoincrement())
  userId          String
  dailyActivityId Int      @unique
  prediksi        StresLevel
  probRendah      Float
  probSedang      Float
  probTinggi      Float

  user            User           @relation(fields: [userId], references: [id])
  dailyActivity   DailyActivity  @relation(fields: [dailyActivityId], references: [id])
}

// model ChatLog {
//   id              Int      @id @default(autoincrement())
//   userId          String
//   timestamp       DateTime @default(now())
//   mode            ChatMode
//   message         String
//   fromUser        Boolean

//   user            User     @relation(fields: [userId], references: [id])
// }

// model Reminder {
//   id              Int      @id @default(autoincrement())
//   userId          String
//   tanggal         DateTime
//   tipe            ReminderType
//   pesan           String

//   user            User     @relation(fields: [userId], references: [id])
// }

model Streak {
  id              Int      @id @default(autoincrement())
  userId          String
  tanggal         DateTime

  user            User     @relation(fields: [userId], references: [id])
}

// ENUM TAMBAHAN
enum StresLevel {
  Rendah
  Sedang
  Tinggi
}

// enum ChatMode {
//   curhat
//   santai
// }

// enum ReminderType {
//   alert_negatif
//   self_care
//   psikolog
// }

